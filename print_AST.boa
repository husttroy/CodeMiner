# print AST nodes
p:Project = input;
methods: output collection[string] of string;

cur_file: string;
cur_class: string;
cur_method: string;

q_url := "https://github.com/fywb251/bsl_impc_android";
q_file := "cube-android/src/com/foreveross/chameleon/pad/fragment/ChatRoomFragment.java";
q_class := "ChatRoomFragment";
q_method := "initValues";

visit(p, visitor {
    # only look at the latest snapshot
    before node: CodeRepository -> {
        # only look at the given project
        if (!match(p.project_url, q_url)) stop;
        
        snapshot := getsnapshot(node, "SOURCE_JAVA_JLS");
        foreach (i: int; def(snapshot[i]))
			visit(snapshot[i]);
		stop;
    }
    
    # record the current file
    before node: ChangedFile -> {
        cur_file = node.name;
        
        # only look at the given java file
        if (!match(cur_file, q_file)) stop;
        
        visit(node, visitor{
            
            # visit class declaration
            before node: Declaration -> {
                # record the class name
                cur_class = node.name;
                
                # only look at the given java class
                if (!match(cur_class, q_class)) stop;
                
                foreach(i: int; def(node.methods[i])){
                    m := node.methods[i];
                    cur_method = m.name;
                    
                    if (match(cur_method, q_method)) {
                        methods[cur_method] << format("%s", m);
                    }
                }    
            }
        });
    }
});
